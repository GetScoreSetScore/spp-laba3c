//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleClient.ControlServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SynItems", Namespace="http://schemas.datacontract.org/2004/07/ControlService")]
    [System.SerializableAttribute()]
    public partial class SynItems : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] LinksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] SummariesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] TitlesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Links {
            get {
                return this.LinksField;
            }
            set {
                if ((object.ReferenceEquals(this.LinksField, value) != true)) {
                    this.LinksField = value;
                    this.RaisePropertyChanged("Links");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Summaries {
            get {
                return this.SummariesField;
            }
            set {
                if ((object.ReferenceEquals(this.SummariesField, value) != true)) {
                    this.SummariesField = value;
                    this.RaisePropertyChanged("Summaries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Titles {
            get {
                return this.TitlesField;
            }
            set {
                if ((object.ReferenceEquals(this.TitlesField, value) != true)) {
                    this.TitlesField = value;
                    this.RaisePropertyChanged("Titles");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ControlServiceReference.IControl")]
    public interface IControl {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControl/ProcessFeeds", ReplyAction="http://tempuri.org/IControl/ProcessFeedsResponse")]
        ConsoleClient.ControlServiceReference.SynItems ProcessFeeds(string[] feeds, string[] tags, string[] mails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControl/ProcessFeeds", ReplyAction="http://tempuri.org/IControl/ProcessFeedsResponse")]
        System.Threading.Tasks.Task<ConsoleClient.ControlServiceReference.SynItems> ProcessFeedsAsync(string[] feeds, string[] tags, string[] mails);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IControlChannel : ConsoleClient.ControlServiceReference.IControl, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ControlClient : System.ServiceModel.ClientBase<ConsoleClient.ControlServiceReference.IControl>, ConsoleClient.ControlServiceReference.IControl {
        
        public ControlClient() {
        }
        
        public ControlClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ControlClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ControlClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ControlClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ConsoleClient.ControlServiceReference.SynItems ProcessFeeds(string[] feeds, string[] tags, string[] mails) {
            return base.Channel.ProcessFeeds(feeds, tags, mails);
        }
        
        public System.Threading.Tasks.Task<ConsoleClient.ControlServiceReference.SynItems> ProcessFeedsAsync(string[] feeds, string[] tags, string[] mails) {
            return base.Channel.ProcessFeedsAsync(feeds, tags, mails);
        }
    }
}
